#version 120

uniform vec4 invres2; // 0.5 * (particleSize / resolution)^2
uniform float dominationscale;
uniform sampler2D skyDominationMap;

uniform float scaledRadius; // radius / particleSize

varying vec2 dominationCoord;
varying vec4 color;

const vec2 center = vec2(0.5, 0.5);

void main()
{
    float dist = max(distance(gl_PointCoord, center) - scaledRadius * 0.5, 0.0);
    vec4 dominated = texture2D(skyDominationMap, dominationCoord);
    gl_FragColor = color * exp(- dist * dist * invres2) - vec4(sqrt(dominated.b) * dominationscale);
}