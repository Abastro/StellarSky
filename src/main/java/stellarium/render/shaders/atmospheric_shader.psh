#version 130

uniform vec3 v3LightDir;      // Direction vector to the light source
uniform float g;			  // Factor g
uniform vec4 rayleighFactor;
uniform vec4 mieFactor;

in vec4 scatteringColor;
in vec3 v3Direction;

float getRayleighPhase(float cos2) {
	return 3 / 4 * (1 + cos2);
}

float getMiePhase(float cos, float cos2, float g, float g2) {
	return 3 * (1 - g2) / (2 * (2 + g2)) * (1 + cos2) / pow(1 + g2 - 2 * g * cos, 1.5);
}

void main()
{

  float fCos = dot(v3LightDir, v3Direction);

  float fCos2 = fCos * fCos;

  gl_FragColor = scatteringColor * (getRayleighPhase(fCos2) * rayleighFactor +
                 getMiePhase(fCos, fCos2, g, g*g) * mieFactor);
  
}